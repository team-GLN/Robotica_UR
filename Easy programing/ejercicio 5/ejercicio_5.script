def ejercicio_5():
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_safety_mode_transition_hardness(1)
  set_tcp(p[0.0,0.0,0.15,0.0,0.0,1.5707963267948966])
  set_payload(2.0)
  set_gravity([0.0, 0.0, 9.82])
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  step_count_a7ef8ab1_a99a_4099_94e3_dddac349c925 = 0.0
  thread Step_Counter_Thread_3d872533_e159_4579_9dd7_2f7695ff06e7():
    while (True):
      step_count_a7ef8ab1_a99a_4099_94e3_dddac349c925 = step_count_a7ef8ab1_a99a_4099_94e3_dddac349c925 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_3d872533_e159_4579_9dd7_2f7695ff06e7()
  $ 1 "Robot Program"
  $ 2 "variables"
  $ 3 "pi≔3.1416"
  global pi=3.1416
  $ 4 "parametros rejilla"
  $ 5 "distancia≔0.5"
  global distancia=0.5
  $ 6 "columnas≔3"
  global columnas=3
  $ 7 "filas≔2"
  global filas=2
  $ 8 "Folderpuntos"
  $ 9 "safe_point≔[0,-pi/4,-pi/2,-3*pi/4,pi/2,0]"
  global safe_point=[0,-pi/4,-pi/2,-3*pi/4,pi/2,0]
  $ 10 "Popup: El programa va a comenzar"
  popup("El programa va a comenzar", "Message", False, False, blocking=True)
  $ 11 "MoveJ"
  $ 12 "safe_point" "breakAfter"
  set_tcp(p[0.0,0.025,0.175,0.0,0.0,1.5707963267948966])
  movej(safe_point, a=1.3962634015954636, v=1.0471975511965976)
  $ 13 "Comprobación puntos"
  $ 14 "i≔0"
  global i=0
  $ 15 "error≔0"
  global error=0
  $ 16 "Loop i<filas"
  while (i<filas):
    $ 17 "j≔0"
    global j=0
    $ 18 "Loop j<columnas"
    while (j<columnas):
      $ 19 "arriba≔p[0.5+i*distancia,-0.15+j*distancia,0.05,0,pi,0]"
      global arriba=p[0.5+i*distancia,-0.15+j*distancia,0.05,0,pi,0]
      $ 20 "abajo≔p[0.5+i*distancia,-0.15+j*distancia,0,0,pi,0]"
      global abajo=p[0.5+i*distancia,-0.15+j*distancia,0,0,pi,0]
      $ 21 "If is_within_safety_limits(arriba)≠ True "
      if (is_within_safety_limits(arriba) !=   True  ):
        $ 22 "error≔error+1"
        global error=error+1
      end
      $ 23 "j≔j+1"
      global j=j+1
    end
    $ 24 "i≔i+1"
    global i=i+1
  end
  $ 25 "If error≠0"
  if (error != 0):
    $ 26 "Popup: La trayectoria tiene puntos que no puede alcanzar. El programa no se va a ejecutar. Por favor compruebe los parametros de la rejilla."
    popup("La trayectoria tiene puntos que no puede alcanzar. El programa no se va a ejecutar. Por favor compruebe los parametros de la rejilla.", "Warning", True, False, blocking=False)
    halt
  else:
    $ 27 "Else" "noBreak"
    $ 28 "Desbarbado"
    $ 29 "i≔0"
    global i=0
    $ 30 "Loop i<filas"
    while (i<filas):
      $ 31 "j≔0"
      global j=0
      $ 32 "Loop j<columnas"
      while (j<columnas):
        $ 33 "arriba≔p[0.5+i*distancia,-0.15+j*distancia,0.05,0,pi,0]"
        global arriba=p[0.5+i*distancia,-0.15+j*distancia,0.05,0,pi,0]
        $ 34 "abajo≔p[0.5+i*distancia,-0.15+j*distancia,0,0,pi,0]"
        global abajo=p[0.5+i*distancia,-0.15+j*distancia,0,0,pi,0]
        $ 35 "MoveJ"
        $ 36 "arriba" "breakAfter"
        set_tcp(p[0.0,0.025,0.175,0.0,0.0,1.5707963267948966])
        movej(arriba, a=1.3962634015954636, v=1.0471975511965976)
        $ 37 "MoveL"
        $ 38 "abajo" "breakAfter"
        set_tcp(p[0.0,0.025,0.175,0.0,0.0,1.5707963267948966])
        movel(abajo, a=1.2, v=0.25)
        $ 39 "Set DO[0]=On"
        set_standard_digital_out(0, True)
        $ 40 "Wait: 2.5"
        sleep(2.5)
        $ 41 "Set DO[0]=Off"
        set_standard_digital_out(0, False)
        $ 42 "MoveL"
        $ 43 "arriba" "breakAfter"
        set_tcp(p[0.0,0.025,0.175,0.0,0.0,1.5707963267948966])
        movel(arriba, a=1.2, v=0.25)
        $ 44 "j≔j+1"
        global j=j+1
      end
      $ 45 "i≔i+1"
      global i=i+1
    end
  end
  $ 46 "MoveJ"
  $ 47 "safe_point" "breakAfter"
  set_tcp(p[0.0,0.025,0.175,0.0,0.0,1.5707963267948966])
  movej(safe_point, a=1.3962634015954636, v=1.0471975511965976)
  $ 48 "Popup: El programa ha finalizado"
  popup("El programa ha finalizado", "Message", False, False, blocking=False)
  halt
end
